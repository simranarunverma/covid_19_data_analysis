# -*- coding: utf-8 -*-
"""Simran Verma_SRMbatch1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1pp1vmw9y45xcdSWAo91mnkumcsGt6kfX

# **SIMRAN VERMA**

**RA1811028010051**

**SRM INSTITUTE OF SCIENCE AND TECHNOLOGY, KATTANKULATHUR**
"""

from google.colab import files 
  
  
uploaded = files.upload()

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
import seaborn as sns
# %matplotlib inline
df = pd.read_csv("covid_19_india.csv")
print(df)

df.head()

df.tail()

df.shape

df.isna().sum()

df_latest = df[df['Date']=="25/04/20"]
df_latest

"""## **TO DISPLAY TOTAL CASES AND ACTIVE CASES OF THE DATASET**"""

df['Total Cases'] = df['Cured'] + df['Deaths'] + df['Confirmed']
print(df)

df['Active'] = df['Total Cases'] - df['Cured'] - df['Deaths']
print(df)

"""# **STATE WITH MAXIMUM ACTIVE CASES AND NUMBER OF ACTIVE CASES**"""

df.nlargest(11, ['Active'])

# Commented out IPython magic to ensure Python compatibility.
import matplotlib.pyplot as plt
# %matplotlib inline
import numpy as np
df = df.sort_values(by=['Active'], ascending = False)
plt.figure(figsize=(12,8), dpi=80)
plt.bar(df['State/UnionTerritory'][:5], df['Active'][:5], align='center',color='red')
plt.ylabel('Number of Active Cases', size = 10)
plt.title('States with maximum active cases', size = 20)
plt.show()

"""# **STATE WITH MINIMUM ACTIVE CASES AND NUMBER OF ACTIVE CASES**"""

df.nsmallest(11, ['Active'])

# Commented out IPython magic to ensure Python compatibility.
import matplotlib.pyplot as plt
# %matplotlib inline
import numpy as np
df = df.sort_values(by=['Active'], ascending = True)
plt.figure(figsize=(12,8), dpi=80)
plt.bar(df['State/UnionTerritory'][:5], df['Active'][:5], align='center',color='green')
plt.ylabel('Number of Active Cases', size = 10)
plt.title('States with Minimum active cases', size = 20)
plt.show()

"""# **TO FIND THE CURRENT DEATH-TO-CURED RATIO AND STATES HAVING CURRENT MAX AND MIN DTC RATIOS**"""

df['DTC_RATIO'] = df['Deaths'] / df['Cured']
print(df)

df.nlargest(12, ['DTC_RATIO'])

df.nsmallest(12, ['DTC_RATIO'])

"""MAXIMUM DEATH-TO-CURED RATIO: ***MAHARASHTRA-0.062552***

MIMIMUM DEATH-TO-CURED RATIO: ***MANIPUR-0.000000***

# **'CURED', 'DEATH' AND 'ACTIVE' PARAMETERS OF DELHI AND MAHRASHTRA**
"""

